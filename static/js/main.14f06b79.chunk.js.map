{"version":3,"sources":["components/circle.js","components/overlay.js","assets/audio/endsound.wav","assets/audio/emraldHill.mp3","App.js","index.js"],"names":["Circle","props","className","color","active","onClick","click","style","pointerEvents","disabled","closeHandler","window","location","reload","Overlay","score","getRandInteger","min","max","Math","floor","random","gameOverSound","Audio","endsound","gameRunSound","emraldHill","App","state","circles","id","current","gameOver","round","gameStart","timer","undefined","pace","clickHandler","setState","endHandler","nextCircle","console","log","nextActive","setTimeout","startHandler","play","clearTimeout","pause","circleList","this","map","i","Component","ReactDOM","render","document","getElementById"],"mappings":"kSAYeA,EATA,SAACC,GACZ,OACI,qBAAKC,UAAS,iBAAYD,EAAME,MAAlB,YAA2BF,EAAMG,OAAS,SAAW,IAAMC,QAASJ,EAAMK,MACpFC,MAAO,CAACC,cAAcP,EAAMQ,SAAS,OAAO,WCHlDC,G,MAAa,WACfC,OAAOC,SAASC,WAeLC,EAZC,SAACb,GACb,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,gDAAmBD,EAAMc,SACzB,wBAAQb,UAAU,WAAWG,QAASK,EAAtC,qBCbK,MAA0B,qCCA1B,MAA0B,uCCOnCM,EAAiB,SAACC,EAAKC,GAC3B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAI,GAAGA,IAG5CK,EAAgB,IAAIC,MAAMC,GAC1BC,EAAe,IAAIF,MAAMG,GA4GhBC,E,4MAzGbC,MAAQ,CACNC,QAAS,CACP,CAAEC,GAAI,EAAG3B,MAAO,SAChB,CAAE2B,GAAI,EAAG3B,MAAO,UAChB,CAAE2B,GAAI,EAAG3B,MAAO,OAChB,CAAE2B,GAAI,EAAG3B,MAAO,WAElBY,MAAO,EACPgB,QAAS,EACTC,UAAU,EACVC,MAAO,EACPC,WAAU,G,EAGZC,WAAQC,E,EACRC,KAAO,K,EAEPC,aAAe,SAACR,GACV,EAAKF,MAAMG,UAAYD,EAI3B,EAAKS,SAAS,CACZxB,MAAO,EAAKa,MAAMb,MAAQ,EAC1BkB,MAAM,IALN,EAAKO,c,EASTC,WAAa,WAEX,GADAC,QAAQC,IAAI,EAAKf,MAAMM,WACnB,EAAKN,MAAMK,OAAS,EACtB,EAAKO,iBADP,CAKA,IAAII,OAAaR,EAEjB,GACEQ,EAAa5B,EAAe,EAAG,SACxB4B,IAAe,EAAKhB,MAAMG,SAEnC,EAAKQ,SAAS,CACZR,QAASa,EACTX,MAAO,EAAKL,MAAMK,MAAQ,EAC1BC,WAAU,IAGZ,EAAKG,MAAQ,IAEb,EAAKF,MAAQU,YAAW,WACtB,EAAKJ,eACJ,EAAKJ,MAERK,QAAQC,IAAI,EAAKf,MAAMG,W,EAGzBe,aAAe,WACbrB,EAAasB,OACb,EAAKN,c,EAIPD,WAAa,WACXQ,aAAa,EAAKb,OAClB,EAAKI,SAAS,CACZP,UAAU,EACVC,MAAO,IAETR,EAAawB,QACb3B,EAAcyB,Q,4CAGhB,WAAU,IAAD,OACDG,EAAaC,KAAKvB,MAAMC,QAAQuB,KAAI,SAACC,GACzC,OACE,cAAC,EAAD,CAEEvB,GAAIuB,EAAEvB,GACN3B,MAAOkD,EAAElD,MACTG,MAAO,kBAAM,EAAKgC,aAAae,EAAEvB,KACjC1B,OAAQ,EAAKwB,MAAMG,UAAYsB,EAAEvB,GACjCrB,SAAU,EAAKmB,MAAMM,WALhBmB,EAAEvB,OAUb,OACE,iCACE,sBAAK5B,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,uBACA,qBAAIA,UAAU,YAAd,4BAA0CiD,KAAKvB,MAAMb,SACrD,qBAAKb,UAAU,aAAf,SAA6BgD,IAC7B,wBAAQ7C,QAAS8C,KAAKL,aAAcrC,SAAU0C,KAAKvB,MAAMM,UAAzD,mBAGA,wBAAQ7B,QAAS8C,KAAKX,WAAY/B,UAAW0C,KAAKvB,MAAMM,UAAxD,qBAIDiB,KAAKvB,MAAMI,UAAY,cAAC,EAAD,CAASjB,MAAOoC,KAAKvB,MAAMb,e,GApGzCuC,aCRlBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.14f06b79.chunk.js","sourcesContent":["import React from 'react';\r\nimport './circle.css'\r\n\r\nconst Circle = (props) => {\r\n    return (\r\n        <div className={`circle ${props.color} ${props.active ? \"active\" : \"\"}`} onClick={props.click}\r\n            style={{pointerEvents:props.disabled?\"auto\":\"none\"}}>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Circle;","import React from 'react';\r\nimport './overlay.css';\r\n\r\nconst closeHandler=()=>{\r\n    window.location.reload();\r\n}\r\n\r\nconst Overlay = (props) => {\r\n    return (\r\n      <div className=\"overlay\">\r\n        <div className=\"overlayWindow\">\r\n          <p>Game over</p>\r\n          <p>your score is: {props.score}</p>\r\n          <button className=\"closeBtn\" onClick={closeHandler}>X</button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Overlay;","export default __webpack_public_path__ + \"static/media/endsound.ce2d94cf.wav\";","export default __webpack_public_path__ + \"static/media/emraldHill.43842253.mp3\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Circle from \"./components/circle.js\";\nimport Overlay from \"./components/overlay.js\";\nimport endsound from \"./assets/audio/endsound.wav\"\nimport emraldHill from \"./assets/audio/emraldHill.mp3\"\n\nconst getRandInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min+1)+min);\n};\n\nconst gameOverSound = new Audio(endsound);\nconst gameRunSound = new Audio(emraldHill);\n\nclass App extends Component {\n  state = {\n    circles: [\n      { id: 1, color: \"green\" },\n      { id: 2, color: \"yellow\" },\n      { id: 3, color: \"red\" },\n      { id: 4, color: \"orange\" },\n    ],\n    score: 0,\n    current: 0,\n    gameOver: false,\n    round: 0,\n    gameStart:false\n  };\n\n  timer = undefined;\n  pace = 1500;\n\n  clickHandler = (id) => {\n    if (this.state.current !== id) {\n      this.endHandler();\n      return;\n    }\n    this.setState({\n      score: this.state.score + 1,\n      round:0\n    });\n  };\n\n  nextCircle = () => {\n    console.log(this.state.gameStart)\n    if (this.state.round >= 5) {\n      this.endHandler();\n      return;\n    }\n\n    let nextActive = undefined;\n\n    do {\n      nextActive = getRandInteger(1, 4);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      round: this.state.round + 1,\n      gameStart:true\n    });\n\n    this.pace *= 0.95;\n\n    this.timer = setTimeout(() => {\n      this.nextCircle()\n    }, this.pace);\n\n    console.log(this.state.current);\n  }\n\n  startHandler = () => {\n    gameRunSound.play();\n    this.nextCircle();\n    \n  }\n\n  endHandler = () => {\n    clearTimeout(this.timer);\n    this.setState({\n      gameOver: true,\n      round: 0,\n    });\n    gameRunSound.pause();\n    gameOverSound.play();\n  }\n\n  render() {\n    const circleList = this.state.circles.map((i) => {\n      return (\n        <Circle\n          key={i.id}\n          id={i.id}\n          color={i.color}\n          click={() => this.clickHandler(i.id)}\n          active={this.state.current === i.id}\n          disabled={this.state.gameStart}\n        />\n      );\n    });\n\n    return (\n      <main>\n        <div className=\"App\">\n          <h1 className=\"titleText\">Speedtest</h1>\n          <h3 className=\"titleText\">Your score is: {this.state.score}</h3>\n          <div className=\"circleList\">{circleList}</div>\n          <button onClick={this.startHandler} disabled={this.state.gameStart}>\n            Start\n          </button>\n          <button onClick={this.endHandler} disabled={!this.state.gameStart}>\n            Stop\n          </button>\n        </div>\n        {this.state.gameOver && <Overlay score={this.state.score} />}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}