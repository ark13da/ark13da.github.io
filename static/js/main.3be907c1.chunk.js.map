{"version":3,"sources":["components/circle.js","components/overlay.js","assets/audio/endsound.wav","App.js","index.js"],"names":["Circle","props","className","color","active","onClick","click","style","pointerEvents","disabled","id","closeHandler","window","location","reload","Overlay","score","getRandInteger","min","max","Math","floor","random","gameOverSound","Audio","endsound","App","state","circles","current","gameOver","round","gameStart","timer","undefined","pace","clickHandler","setState","endHandler","nextCircle","console","log","nextActive","setTimeout","startHandler","clearTimeout","play","circleList","this","map","i","Component","ReactDOM","render","document","getElementById"],"mappings":"kSAYeA,EATA,SAACC,GACZ,OACI,qBAAKC,UAAS,iBAAYD,EAAME,MAAlB,YAA2BF,EAAMG,OAAS,SAAW,IAAMC,QAASJ,EAAMK,MACpFC,MAAO,CAACC,cAAcP,EAAMQ,SAAS,OAAO,QADhD,SAEI,4BAAIR,EAAMS,QCJhBC,G,MAAa,WACfC,OAAOC,SAASC,WAeLC,EAZC,SAACd,GACb,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,gDAAmBD,EAAMe,SACzB,wBAAQX,QAASM,EAAjB,qBCbK,MAA0B,qCCMnCM,EAAiB,SAACC,EAAKC,GAC3B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAI,GAAGA,IAG5CK,EAAgB,IAAIC,MAAMC,GA0GjBC,E,4MAvGbC,MAAQ,CACNC,QAAS,CACP,CAAElB,GAAI,EAAGP,MAAO,SAChB,CAAEO,GAAI,EAAGP,MAAO,UAChB,CAAEO,GAAI,EAAGP,MAAO,OAChB,CAAEO,GAAI,EAAGP,MAAO,WAElBa,MAAO,EACPa,QAAS,EACTC,UAAU,EACVC,MAAO,EACPC,WAAU,G,EAGZC,WAAQC,E,EACRC,KAAO,K,EAEPC,aAAe,SAAC1B,GACV,EAAKiB,MAAME,UAAYnB,EAI3B,EAAK2B,SAAS,CACZrB,MAAO,EAAKW,MAAMX,MAAQ,EAC1Be,MAAM,IALN,EAAKO,c,EASTC,WAAa,WAEX,GADAC,QAAQC,IAAI,EAAKd,MAAMK,WACnB,EAAKL,MAAMI,OAAS,EACtB,EAAKO,iBADP,CAKA,IAAII,OAAaR,EAEjB,GACEQ,EAAazB,EAAe,EAAG,SACxByB,IAAe,EAAKf,MAAME,SAEnC,EAAKQ,SAAS,CACZR,QAASa,EACTX,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BC,WAAU,IAGZ,EAAKG,MAAQ,IAEb,EAAKF,MAAQU,YAAW,WACtB,EAAKJ,eACJ,EAAKJ,MAERK,QAAQC,IAAI,EAAKd,MAAME,W,EAGzBe,aAAe,WACb,EAAKL,c,EAIPD,WAAa,WACXO,aAAa,EAAKZ,OAClB,EAAKI,SAAS,CACZP,UAAU,EACVC,MAAO,IAETR,EAAcuB,Q,4CAGhB,WAAU,IAAD,OACDC,EAAaC,KAAKrB,MAAMC,QAAQqB,KAAI,SAACC,GACzC,OACE,cAAC,EAAD,CAEExC,GAAIwC,EAAExC,GACNP,MAAO+C,EAAE/C,MACTG,MAAO,kBAAM,EAAK8B,aAAac,EAAExC,KACjCN,OAAQ,EAAKuB,MAAME,UAAYqB,EAAExC,GACjCD,SAAU,EAAKkB,MAAMK,WALhBkB,EAAExC,OAUb,OACE,iCACE,sBAAKR,UAAU,MAAf,UACE,2CACA,gDAAmB8C,KAAKrB,MAAMX,SAC9B,qBAAKd,UAAU,aAAf,SAA6B6C,IAC7B,wBAAQ1C,QAAS2C,KAAKJ,aAAcnC,SAAUuC,KAAKrB,MAAMK,UAAzD,mBAGA,wBAAQ3B,QAAS2C,KAAKV,WAAY7B,UAAWuC,KAAKrB,MAAMK,UAAxD,qBAIDgB,KAAKrB,MAAMG,UAAY,cAAC,EAAD,CAASd,MAAOgC,KAAKrB,MAAMX,e,GAlGzCmC,aCNlBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3be907c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './circle.css'\r\n\r\nconst Circle = (props) => {\r\n    return (\r\n        <div className={`circle ${props.color} ${props.active ? \"active\" : \"\"}`} onClick={props.click}\r\n            style={{pointerEvents:props.disabled?\"auto\":\"none\"}}>\r\n            <p>{props.id}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Circle;","import React from 'react';\r\nimport './overlay.css';\r\n\r\nconst closeHandler=()=>{\r\n    window.location.reload();\r\n}\r\n\r\nconst Overlay = (props) => {\r\n    return (\r\n      <div className=\"overlay\">\r\n        <div className=\"overlayWindow\">\r\n          <p>Game over</p>\r\n          <p>your score is: {props.score}</p>\r\n          <button onClick={closeHandler}>X</button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Overlay;","export default __webpack_public_path__ + \"static/media/endsound.ce2d94cf.wav\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Circle from \"./components/circle.js\";\nimport Overlay from \"./components/overlay.js\";\nimport endsound from \"./assets/audio/endsound.wav\"\n\nconst getRandInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min+1)+min);\n};\n\nconst gameOverSound = new Audio(endsound);\n\nclass App extends Component {\n  state = {\n    circles: [\n      { id: 1, color: \"green\" },\n      { id: 2, color: \"yellow\" },\n      { id: 3, color: \"red\" },\n      { id: 4, color: \"orange\" },\n    ],\n    score: 0,\n    current: 0,\n    gameOver: false,\n    round: 0,\n    gameStart:false\n  };\n\n  timer = undefined;\n  pace = 1500;\n\n  clickHandler = (id) => {\n    if (this.state.current !== id) {\n      this.endHandler();\n      return;\n    }\n    this.setState({\n      score: this.state.score + 1,\n      round:0\n    });\n  };\n\n  nextCircle = () => {\n    console.log(this.state.gameStart)\n    if (this.state.round >= 5) {\n      this.endHandler();\n      return;\n    }\n\n    let nextActive = undefined;\n\n    do {\n      nextActive = getRandInteger(1, 4);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      round: this.state.round + 1,\n      gameStart:true\n    });\n\n    this.pace *= 0.95;\n\n    this.timer = setTimeout(() => {\n      this.nextCircle()\n    }, this.pace);\n\n    console.log(this.state.current);\n  }\n\n  startHandler = () => {\n    this.nextCircle();\n    \n  }\n\n  endHandler = () => {\n    clearTimeout(this.timer);\n    this.setState({\n      gameOver: true,\n      round: 0,\n    });\n    gameOverSound.play();\n  }\n\n  render() {\n    const circleList = this.state.circles.map((i) => {\n      return (\n        <Circle\n          key={i.id}\n          id={i.id}\n          color={i.color}\n          click={() => this.clickHandler(i.id)}\n          active={this.state.current === i.id}\n          disabled={this.state.gameStart}\n        />\n      );\n    });\n\n    return (\n      <main>\n        <div className=\"App\">\n          <h1>Speedtest</h1>\n          <p>Your score is: {this.state.score}</p>\n          <div className=\"circleList\">{circleList}</div>\n          <button onClick={this.startHandler} disabled={this.state.gameStart}>\n            Start\n          </button>\n          <button onClick={this.endHandler} disabled={!this.state.gameStart}>\n            Stop\n          </button>\n        </div>\n        {this.state.gameOver && <Overlay score={this.state.score} />}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}